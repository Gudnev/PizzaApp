// –ò–º–ø–æ—Ä—Ç –∏–∑ Redux Toolkit: createSlice ‚Äî —Å–æ–∑–¥–∞–Ω–∏–µ —Å–ª–∞–π—Å–∞, createAsyncThunk ‚Äî –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';

// –ò–º–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–∑ localStorage
import { loadState } from './storage';

// –¢–∏–ø –¥–∞–Ω–Ω—ã—Ö, –∫–æ—Ç–æ—Ä—ã–π –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–µ—Ä–≤–µ—Ä –ø—Ä–∏ –ª–æ–≥–∏–Ω–µ –∏–ª–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
import { LoginResponse } from '../interfaces/auth.interface';

// –ò–º–ø–æ—Ä—Ç axios –¥–ª—è HTTP-–∑–∞–ø—Ä–æ—Å–æ–≤ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
import axios, { AxiosError } from 'axios';

// –ë–∞–∑–æ–≤—ã–π URL API
import { PREFIX } from '../helpers/API';

// –¢–∏–ø –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
import { Profile } from '../interfaces/user.interface';

// –¢–∏–ø–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤—Å–µ–≥–æ Redux-—Ö—Ä–∞–Ω–∏–ª–∏—â–∞
import { RootState } from './store';

// –ö–ª—é—á –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è JWT –≤ localStorage
export const JWT_PERSISTENT_STATE = 'userData';

// –¢–∏–ø –¥–∞–Ω–Ω—ã—Ö, –∫–æ—Ç–æ—Ä—ã–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ localStorage
export interface UserPersistentState {
	jwt: string | null;
}

// –û—Å–Ω–æ–≤–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ user-—Å–ª–∞–π—Å–∞
export interface UserState {
	jwt: string | null;                // —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
	loginErrorMessage?: string;       // —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –ª–æ–≥–∏–Ω–∞
	registerErrorMessage?: string;    // —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
	profile?: Profile;                // –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
}

// –ù–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ ‚Äî –∑–∞–≥—Ä—É–∂–∞–µ–º jwt –∏–∑ localStorage, –µ—Å–ª–∏ –µ—Å—Ç—å
const initialState: UserState = {
	jwt: loadState<UserPersistentState>(JWT_PERSISTENT_STATE)?.jwt ?? null
};

// ‚úÖ Thunk –¥–ª—è –ª–æ–≥–∏–Ω–∞
export const login = createAsyncThunk('user/login',
	async (params: { email: string, password: string }) => {
		try {
			// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ /auth/login
			const { data } = await axios.post<LoginResponse>(`${PREFIX}/auth/login`, {
				email: params.email,
				password: params.password
			});
			return data; // –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞
		} catch (e) {
			if (e instanceof AxiosError) {
				// –ü—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –∏–∑ API
				throw new Error(e.response?.data.message);
			}
		}
	}
);

// ‚úÖ Thunk –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
export const register = createAsyncThunk('user/register',
	async (params: { email: string, password: string, name: string }) => {
		try {
			const { data } = await axios.post<LoginResponse>(`${PREFIX}/auth/register`, {
				email: params.email,
				password: params.password,
				name: params.name
			});
			return data;
		} catch (e) {
			if (e instanceof AxiosError) {
				throw new Error(e.response?.data.message);
			}
		}
	}
);

// ‚úÖ Thunk –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è
export const getProfile = createAsyncThunk<Profile, void, { state: RootState }>(
	'user/getProfile',
	async (_, thunkApi) => {
		const jwt = thunkApi.getState().user.jwt; // –ø–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ store

		// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å —Å —Ç–æ–∫–µ–Ω–æ–º –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ
		const { data } = await axios.get<Profile>(`${PREFIX}/user/profile`, {
			headers: {
				Authorization: `Bearer ${jwt}`
			}
		});
		return data;
	}
);

// üß© –°–æ–∑–¥–∞–Ω–∏–µ user-slice
export const userSlice = createSlice({
	name: 'user',
	initialState,
	reducers: {
		// –í—ã—Ö–æ–¥ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞
		logout: (state) => {
			state.jwt = null;
		},
		// –û—á–∏—Å—Ç–∫–∞ –æ—à–∏–±–∫–∏ –ª–æ–≥–∏–Ω–∞
		clearLoginError: (state) => {
			state.loginErrorMessage = undefined;
		},
		// –û—á–∏—Å—Ç–∫–∞ –æ—à–∏–±–∫–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
		clearRegisterError: (state) => {
			state.registerErrorMessage = undefined;
		}
	},
	extraReducers: (builder) => {
		// –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –ª–æ–≥–∏–Ω–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–∫–µ–Ω
		builder.addCase(login.fulfilled, (state, action) => {
			if (!action.payload) return;
			state.jwt = action.payload.access_token;
		});
		// –ï—Å–ª–∏ –ª–æ–≥–∏–Ω –Ω–µ —É–¥–∞–ª—Å—è ‚Äî —Å–æ—Ö—Ä–∞–Ω—è–µ–º –æ—à–∏–±–∫—É
		builder.addCase(login.rejected, (state, action) => {
			state.loginErrorMessage = action.error.message;
		});

		// –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è ‚Äî —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å
		builder.addCase(getProfile.fulfilled, (state, action) => {
			state.profile = action.payload;
		});

		// –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–∫–µ–Ω
		builder.addCase(register.fulfilled, (state, action) => {
			if (!action.payload) return;
			state.jwt = action.payload.access_token;
		});
		// –ï—Å–ª–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å ‚Äî —Å–æ—Ö—Ä–∞–Ω—è–µ–º –æ—à–∏–±–∫—É
		builder.addCase(register.rejected, (state, action) => {
			state.registerErrorMessage = action.error.message;
		});
	}
});

// –≠–∫—Å–ø–æ—Ä—Ç reducer'–∞ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –≤ store.ts
export default userSlice.reducer;

// –≠–∫—Å–ø–æ—Ä—Ç –≤—Å–µ—Ö actions (logout, clearLoginError, clearRegisterError)
export const userActions = userSlice.actions;
